{% extends 'base.j2' %}

{% block js %}
<script>
    // Function to create common buttons
    function getCommonButtons(checkAll, elementId) {
        return [
            {
                text: checkAll ? 'Check All' : 'Check All',
                action: function (e, dt, node, config) {
                    const isChecked = $(node).text() === 'Check All';
                    
                    // Use DataTables' API to get all rows (visible and non-visible)
                    const checkboxes = dt.table().node().querySelectorAll(`input[type="checkbox"]`);
                    checkboxes.forEach(checkbox => checkbox.checked = isChecked);

                    // Update the button text
                    $(node).text(isChecked ? 'Uncheck All' : 'Check All');
                }
            },
            {
                text: 'Export',
                action: function () {},
                split: ['pdf', 'excel', 'print', 'copy']
            },
            {
                text: 'View',
                action: function () {},
                split: [
                    { text: 'Show 10 items', action: (e, dt) => dt.page.len(10).draw() },
                    { text: 'Show 25 items', action: (e, dt) => dt.page.len(25).draw() },
                    { text: 'Show 50 items', action: (e, dt) => dt.page.len(50).draw() },
                    { text: 'Show 100 items', action: (e, dt) => dt.page.len(100).draw() }
                ]
            }
        ];
    }

    function initializeDataTable(selector, customOptions) {
        const elements = document.querySelectorAll(selector);
        elements.forEach(element => {
            const tableId = element.id;
            const tableOptions = {
                colReorder: true,
                layout: {
                    topStart: {
                        buttons: getCommonButtons(selector.includes('advanced'), tableId)
                    }
                },
                pageLength: 25
            };

            // Merge custom options with the default tableOptions
            const finalOptions = { ...tableOptions, ...customOptions };
            new DataTable(`#${tableId}`, finalOptions);
        });
    }

    // Basic Table Initialization
    initializeDataTable('[id^="basic_"]', {});

    {% if 'responsive_addon' in content['all_layout'] and "columns" in content["all_layout"]["responsive_addon"]%}
    // Advanced Table Initialization
    initializeDataTable('[id^="advanced_"]', {
        layout: {
            top1: {
                searchPanes: {
                    cascadePanes: true,
                    {% if "responsive_addon" in content["all_layout"] %}
                    columns: {{ content["all_layout"]["responsive_addon"]["columns"] }}
                    {% endif %}
                }
            }
        },
        columnDefs: [
            {
                targets: '_all',
                render: function (data, type) {
                    if (type === 'sp') {
                        return data
                            .replace(/<\/?[^>]+(>|$)/g, '')
                            .replace(/(<br\s*\/?>)/gi, '')
                            .normalize('NFKD')
                            .replace(/[^\x00-\x7F]/g, '')
                            .split(',')
                            .map(item => item.trim());
                    }
                    return data;
                },
                searchPanes: { orthogonal: 'sp' }
            }
        ]
    });
    {% endif %}

    
    {% if 'responsive_addon' in content['all_layout'] and 'ajax' in content['all_layout']['responsive_addon'] %}
    // Optimized Table Initialization (Using AJAX)
    const tableData = {{ content['all_layout']['responsive_addon']['ajax'] | safe }};
    initializeDataTable('[id^="optimized_"]', {
        data: tableData,
        columns: [{% for column in content['all_layout']['responsive_addon']['ajax_columns'] %}
            { data: '{{ column["data"] }}', defaultContent: '' },
        {% endfor %}]
    });

    // Advanced Table Initialization
    initializeDataTable('[id^="optimadvanced_"]', {
        data: tableData,
        columns: [{% for column in content['all_layout']['responsive_addon']['ajax_columns'] %}
            { data: '{{ column["data"] }}', defaultContent: '' },
        {% endfor %}],
        layout: {
            topStart: {
                buttons: getCommonButtons(true, 'optimadvanced_') // Include your buttons here
            },
            top1: {
                searchPanes: {
                    cascadePanes: true,
                    {% if "responsive_addon" in content["all_layout"] %}
                    columns: {{ content["all_layout"]["responsive_addon"]["columns"] }}
                    {% endif %}
                }
            }
        },
        columnDefs: [
            {
                targets: '_all',
                render: function (data, type) {
                    // Check if data is undefined or null
                    if (!data) {
                        return ''; // Return an empty string if data is undefined or null
                    }

                    if (type === 'sp') {
                        return data
                            .replace(/<\/?[^>]+(>|$)/g, '') // Strip HTML tags
                            .replace(/(<br\s*\/?>)/gi, '') // Remove <br> tags
                            .normalize('NFKD') // Normalize Unicode characters
                            .replace(/[^\x00-\x7F]/g, '') // Remove non-ASCII characters
                            .split(',')
                            .map(item => item.trim()); // Trim whitespace
                    }
                    return data;
                },
                searchPanes: { orthogonal: 'sp' }
            }
        ]
    });
    {% endif %}

</script>
{% endblock %}

{% block title %}
{% endblock %}

{% block main_page %}

{% if history is not defined %}
    {% set history = None %}
{% endif %}

{% set submenu_count = namespace(value=0) %}
{% set path_count = namespace(value=0) %}

{%if content|length <= 2 %} 
    {# This is size of 1 because the modals are always here #}
    <div class="text-center">
        <img src="{{ url_for('static', filename= 'images/status/unauthorized.svg')}}" width="500vw">
        <h1 class="error-title">Unauthorized</h1>
        <p class="fs-5 text-gray-600">There is no tools that you are authorized to use in this section</p>
    </div>
{% else %}
    {# Start with the modals #}
    {% for modal in content["modals"] %}
    <div class="modal fade" id="{{modal["id"]}}" tabindex="-1" aria-labelledby="Coucou" aria-hidden="true" style="display: none;">
        <div class="modal-dialog modal-dialog-scrollable modal-full" role="document">
            <div class="modal-content">
                {% if "header" in modal %}
                <div class="modal-header">
                <h5 class="modal-title">{{ modal["header"] }}</h5>
                </div>
                {% endif %}
                <div class="modal-body">
                {# Each module is displayed in its block #}
                {% for module in modal["content"] %}
                    {% if module != "modals" %}
                        {# Module layouts #}
                        {% for layout in modal["content"][module]["layouts"] %}

                            {# Subtitle #}
                            {% if layout["subtitle"] %}
                                <h3 class="text-primary mt-5">{{layout["subtitle"]}}</h3>
                            {% endif %}

                            {# Content #}
                            {% if layout["type"] == "VERT" %}
                                {{ disp_layouts.display_vertical_layout(layout["columns"], layout["containers"], layout["align"]) }}
                            {% elif layout["type"] == "TABLE" %}
                                {{ disp_layouts.display_table_layout(layout["header"], layout["lines"]) }}
                            {% endif %}
                        {% endfor%}
                    {% endif %}
                {% endfor%}
            </div>
            </div>
        </div>
    </div>
    {% endfor %}

    {# Each module is displayed in its block #}
    {% for module in content %}
        {% if module != "modals" and module != "all_layout"%}
            <div class="card">
                {# Possibility to add a header to the card #}
                <div class="card-header">
                </div>

                {# Module content #}
                <div class="card-body">
                    {% if content[module]["display"] %}
                        {% if "name_override" in content[module] %}
                        <h1>{{ content[module]["name_override"] }}</h1>
                        {% else %}
                        <h1>{{ module }}</h1>
                        {% endif %}
                    {% endif %}

                    {# Form information #}
                    {% if target %}
                        <form action="{{ url_for(target) }}" method="POST" enctype="multipart/form-data" onkeydown="return event.key !== 'Enter'">
                    {% endif %}
                    {# Module layouts #}
                    {% for layout in content[module]["layouts"] %}

                        {# Subtitle #}
                        {% if layout["subtitle"] %}
                            <h3 class="text-primary mt-5">{{layout["subtitle"]}}</h3>
                        {% endif %}

                        {# Content #}
                        {{ disp_layouts.display_layout(layout) }}
                    {% endfor%}

                    {% if target %}
                    </form>
                    {% endif %}

                </div>

                {# Module footer #}
                {% if content[module]["type"] == "threaded_action" or content[module]["type"] == "worfklow" %}
                    <div class="card-footer alert-light-secondary">
                        <h4>Action progress</h4>
                        <div class="table-responsive">
                            <table style="--bs-table-bg: transparent; --bs-table-striped-bg: transparent; --bs-table-hover-bg: transparent; --bs-table-active-bg: transparent; --bs-table-border-color: rgb(220, 220, 220);" class="table-light table table-striped mb-0" id="{{module}}_result">
                                <thead>
                                    <tr>
                                        <th>Task</th>
                                        <th>Status</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    
                                </tbody>
                            </table>
                        </div>
                        <div id="progress_result">
                        </div>
                    </div>
                {% endif %}
            </div>
        {% endif %}
    {% endfor%}
{% endif %}
{% endblock %}