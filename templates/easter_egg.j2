    function showCustomAlert(message, imageUrl) {
        // Vérifier si une boîte de dialogue existe déjà
        if (document.getElementById("custom-alert")) {
            return;
        }

        // Détecter le thème actuel
        const isLightTheme = document.documentElement.getAttribute("data-bs-theme") === "light";

        // Couleurs dynamiques selon le thème
        const backgroundColor = isLightTheme ? "#fff" : "#333";
        const textColor = isLightTheme ? "#000" : "#fff";
        const borderColor = isLightTheme ? "#007BFF" : "#FFD700"; // Bleu pour clair, or pour sombre
        const buttonBackgroundColor = isLightTheme ? "#007BFF" : "#444";
        const buttonTextColor = "#fff";

        // Conteneur principal
        const alertContainer = document.createElement("div");
        alertContainer.id = "custom-alert";
        alertContainer.style.position = "fixed";
        alertContainer.style.top = "50%";
        alertContainer.style.left = "50%";
        alertContainer.style.transform = "translate(-50%, -50%)";
        alertContainer.style.zIndex = "9999";
        alertContainer.style.backgroundColor = backgroundColor;
        alertContainer.style.color = textColor;
        alertContainer.style.border = `3px solid ${borderColor}`;
        alertContainer.style.borderRadius = "10px";
        alertContainer.style.boxShadow = "0 4px 8px rgba(0, 0, 0, 0.2)";
        alertContainer.style.textAlign = "center";
        alertContainer.style.padding = "20px";
        alertContainer.style.width = "300px";

        // Image
        const image = document.createElement("img");
        image.src = imageUrl;
        image.alt = "Alert Image";
        image.style.width = "100%";
        image.style.borderRadius = "8px";
        image.style.marginBottom = "15px";

        // Texte
        const text = document.createElement("p");
        text.textContent = message;
        text.style.fontSize = "14px";

        // Bouton de fermeture
        const closeButton = document.createElement("button");
        closeButton.textContent = "OK";
        closeButton.style.padding = "10px 20px";
        closeButton.style.border = "none";
        closeButton.style.borderRadius = "5px";
        closeButton.style.backgroundColor = buttonBackgroundColor;
        closeButton.style.color = buttonTextColor;
        closeButton.style.cursor = "pointer";
        closeButton.onclick = () => document.body.removeChild(alertContainer);

        // Ajouter les éléments au conteneur
        alertContainer.appendChild(image);
        alertContainer.appendChild(text);
        alertContainer.appendChild(closeButton);

        // Ajouter au DOM
        document.body.appendChild(alertContainer);
    }
</script>

<script>
    let refreshAttempts = 0;  // Compteur de tentatives de rafraîchissement
// Désactiver le rechargement et afficher l'alerte personnalisée
    document.addEventListener("keydown", function (event) {
        if ((event.ctrlKey && event.key === "r") || event.key === "F5" || event.keyCode === 116) {
            event.preventDefault();
            refreshAttempts++;
            if (refreshAttempts === 1) {
                showCustomAlert(
                    "Reloading the page is disabled.",
                    "{{ url_for('static', filename='images/site/norefresh.jpg') }}"
                );
            } else {
                triggerDeathScreen(event, "Reloading the page is disabled !");
                refreshAttempts = 0;
            }
        }
    });
</script>
 
<script>
document.addEventListener("DOMContentLoaded", () => {
    const PIXEL_MODE_KEY = "pixelArtMode";

    // Vérifier si le mode Pixel Art est actif dans localStorage
    if (localStorage.getItem(PIXEL_MODE_KEY) === "true") {
        document.body.classList.add("pixel-art-mode");
    }

    // Détecter le mot "pixel"
    const secretWord = "pixel";
    let typedKeys = [];

    document.addEventListener("keydown", (event) => {
        typedKeys.push(event.key.toLowerCase());
        typedKeys = typedKeys.slice(-secretWord.length);

        if (typedKeys.join("") === secretWord) {
            const isActive = document.body.classList.toggle("pixel-art-mode");

            // Enregistrer l'état dans localStorage
            localStorage.setItem(PIXEL_MODE_KEY, isActive.toString());
        }
    });
});

</script>

{% block extra_css %}
<style>
    @keyframes deathFade {
        0% {
            opacity: 0;
            font-size: 10px;
        }
        50% {
            opacity: 1;
            font-size: 80px;
        }
        100% {
            opacity: 1;
            font-size: 120px; /* Taille finale du texte */
        }
    }

    @keyframes subTextFade {
        0% {
            opacity: 0;
            font-size: 5px;
        }
        50% {
            opacity: 1;
            font-size: 30px;
        }
        100% {
            opacity: 1;
            font-size: 50px; /* Taille finale du sous-texte */
        }
    }

    .death-screen {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.8);
        color: darkred;
        font-weight: bold;
        text-transform: uppercase;
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 9999;
        opacity: 0;
        font-size: 10px; /* Taille initiale */
        transition: background-color 1s ease-in-out;
    }

    .show-death {
        display: flex !important;
        animation: deathFade 2s ease-out forwards;
    }

    @font-face {
        font-family: 'Optimus Princeps';
        src: url("{{ url_for('static', filename='fonts/OptimusPrinceps.ttf') }}") format('truetype');
        font-weight: normal;
        font-style: normal;
    }

    .death-screen {
        font-family: 'Optimus Princeps', serif;
        font-size: 10px;
        text-shadow: 2px 2px 10px black; /* Ajoute un effet dramatique */
    }

    /* Sous-texte (phrase plus petite, centré et grandissant) */
    .death-subtext {
        font-size: 5px; /* Taille initiale plus petite */
        margin-top: 10px; /* Espacement entre YOU DIED et le sous-texte */
        opacity: 0;
        text-transform: none; /* Garde la casse normale */
        font-weight: normal;
        font-style: italic;
        animation: subTextFade 2s ease-out forwards;
    }

    .death-text-container {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
    }

    .death-text-wrapper {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        text-align: center; /* Assure l'alignement du texte */
    }
</style>
{% endblock %}

{% block extra_js %}
<script>
    let typed = "";
    let targetPhrase = "YOU DIED";
    let audio = new Audio("{{ url_for('static', filename='sounds/site/you_died.mp3') }}");
    let deathTriggered = false;  // Pour éviter le double déclenchement

    function triggerDeathScreen(event, phrase) {
        if (deathTriggered) return; // Évite le double déclenchement
        deathTriggered = true;

        // Crée l'élément seulement s'il n'existe pas déjà
        // Crée l'élément seulement s'il n'existe pas déjà
        if (!document.querySelector(".death-screen")) {
            let deathScreen = document.createElement("div");
            deathScreen.classList.add("death-screen");

            // Conteneur pour centrer les textes
            let textContainer = document.createElement("div");
            textContainer.classList.add("death-text-container");

            // Sous-conteneur pour assurer l'alignement des deux textes
            let textWrapper = document.createElement("div");
            textWrapper.classList.add("death-text-wrapper");

            // Ajoute le texte principal
            let mainText = document.createElement("p");
            mainText.textContent = "YOU DIED";
            mainText.classList.add("death-text");

            textWrapper.appendChild(mainText);

            // Ajoute le sous-texte SEULEMENT s'il y en a un
            if (phrase) {
                let subText = document.createElement("p");
                subText.textContent = phrase;
                subText.classList.add("death-subtext");
                textWrapper.appendChild(subText);
            }

            // Assemble les éléments
            textContainer.appendChild(textWrapper);
            deathScreen.appendChild(textContainer);
            document.body.appendChild(deathScreen);
        }


        let deathScreen = document.querySelector(".death-screen");
        document.body.style.backgroundColor = "black";
        deathScreen.classList.add("show-death");

        audio.play(); // Joue le son

        setTimeout(() => {
            document.body.style.backgroundColor = "";
            deathScreen.remove();
            deathTriggered = false;  // Réinitialise pour autoriser un nouveau déclenchement
        }, 9000);
    }

    document.addEventListener("keydown", function(event) {
        typed += event.key.toUpperCase();
        if (typed.length > targetPhrase.length) {
            typed = typed.slice(1);
        }

        if (typed === targetPhrase) {
            triggerDeathScreen(event,"");
        }
    });

</script>
{% endblock %}
